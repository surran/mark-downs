<div class="stackedit__html"><h1 id="simulate-a-server-rack-using-sse-server-side-events">Simulate a Server Rack using SSE (Server Side Events)</h1>
<h3 id="scenario">Scenario</h3>
<p>Server Side Events is a light weight &amp; unidirectional way to push data from server to client over a http stream. It fits well in scenarios where clients needs to be notified or updated constantly with latest data from the server.</p>
<p>Let us simulate a server rack (as shown in the below image) using server side events.</p>
<p><img src="https://surran.github.io/mark-downs/assets/sse1.png" alt="" title="SSE Screenshot"></p>
<h3 id="solution">Solution</h3>
<p>The solution involves the following key steps:</p>
<ol>
<li>write code for api server in nodejs</li>
<li>write code for client in html</li>
<li>run node server to see the code in operation</li>
</ol>
<h4 id="server">Server</h4>
<p>Create a dev folder. npm init and install express in it.</p>
<pre class=" language-bash"><code class="prism  language-bash"><span class="token function">mkdir</span> dev <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> dev
<span class="token function">npm</span> init -y
<span class="token function">npm</span> <span class="token function">install</span> express
</code></pre>
<p>Create a file <code>sse.js</code> and copy paste the below code in it. This file shall generate the api server for us.</p>
<pre class=" language-js"><code class="prism  language-js"><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'express'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token keyword">static</span><span class="token punctuation">(</span><span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/serverStats'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/event-stream'</span><span class="token punctuation">,</span>
    <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>
    <span class="token string">'Connection'</span><span class="token punctuation">:</span> <span class="token string">'keep-alive'</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token function">initailizeRack</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">systemStat</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> memory <span class="token operator">=</span> <span class="token function">generateRandomNumber</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>memory<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> cpu <span class="token operator">=</span> <span class="token function">generateRandomNumber</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>cpu<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token comment">/* Let us suppose a server goes down when its cpu usage exceeds 98% */</span>
  <span class="token keyword">const</span> status <span class="token operator">=</span> cpu <span class="token operator">&gt;=</span> <span class="token number">98</span> <span class="token operator">?</span> <span class="token string">"down"</span> <span class="token punctuation">:</span> <span class="token string">"running"</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token string">"running"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* send latest data for a running server */</span>
    <span class="token keyword">let</span> currentData <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string">"serverId"</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>serverId<span class="token punctuation">,</span>
      <span class="token string">"cpu"</span><span class="token punctuation">:</span> cpu<span class="token punctuation">,</span>
      <span class="token string">"status"</span><span class="token punctuation">:</span> status<span class="token punctuation">,</span>
      <span class="token string">"memory"</span><span class="token punctuation">:</span> memory
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"data: "</span> <span class="token operator">+</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>currentData<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n\n"</span><span class="token punctuation">)</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">systemStat</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> currentData<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">systemStat</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token function">initializeServer</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">initailizeRack</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> serversInRack<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> serversInRack<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token function">systemStat</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token function">initializeServer</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">initializeServer</span><span class="token punctuation">(</span>serverId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token string">"serverId"</span><span class="token punctuation">:</span> serverId<span class="token punctuation">,</span>
    <span class="token string">"cpu"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string">"memory"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token string">"running"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">generateRandomNumber</span><span class="token punctuation">(</span>around<span class="token punctuation">,</span> maxOffset<span class="token punctuation">,</span> lowerLimit<span class="token punctuation">,</span> upperLimit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> newNumber <span class="token operator">=</span> around <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>maxOffset <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newNumber <span class="token operator">&lt;</span> lowerLimit<span class="token punctuation">)</span> <span class="token keyword">return</span> lowerLimit
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newNumber <span class="token operator">&gt;</span> upperLimit<span class="token punctuation">)</span> <span class="token keyword">return</span> upperLimit
  <span class="token keyword">return</span> newNumber
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Listening on port 3000!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre>
<p>Here we are creating a simulation of a rack of 8 servers. For each server, its cpu &amp; memory usage is passed to the client every 100 millisecond. In our simulation we assume a server goes ‘down’ if its cpu usage goes above 98%. A ‘down’ server takes 10 seconds to reboot and come back ‘up’.</p>
<h4 id="client">Client</h4>
<p>Inside <code>dev</code> folder create a <code>public</code> folder.</p>
<pre class=" language-bash"><code class="prism  language-bash"><span class="token function">mkdir</span> public <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> public
</code></pre>
<p>Create a <code>index.html</code> file in this folder and copy paste the below code in it. This html file shall be our client. Any number of such clients can be created by connecting to this html in different browser tabs/windows.</p>
<pre class=" language-html"><code class="prism  language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Server Rack: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>state<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  In this simulation we assume a server goes 'down' if its cpu usage goes above 98%. A down server takes 10 seconds to reboot and come back up.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>server-rack<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script language-javascript">
  <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">renderServers</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>window<span class="token punctuation">.</span>EventSource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventSource</span><span class="token punctuation">(</span><span class="token string">'/serverStats'</span><span class="token punctuation">)</span>
      source<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> processEvent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

      source<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'state'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Connected"</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

      source<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id_state <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'state'</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>eventPhase <span class="token operator">==</span> EventSource<span class="token punctuation">.</span>CLOSED<span class="token punctuation">)</span>
          source<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>readyState <span class="token operator">==</span> EventSource<span class="token punctuation">.</span>CLOSED<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          id_state<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Disconnected"</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>readyState <span class="token operator">==</span> EventSource<span class="token punctuation">.</span>CONNECTING<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          id_state<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Connecting..."</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Your browser doesn't support SSE"</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">processEvent</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token string">"down"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'server-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">"red"</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'server-container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">"gray"</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'cpu-stat'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token string">`CPU </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>cpu<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%`</span></span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'memory-stat'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Memory </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>memory<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%`</span></span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'cpu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>cpu<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>serverId <span class="token operator">+</span> <span class="token string">'memory'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>memory<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">renderServers</span><span class="token punctuation">(</span>serversInRack<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> serversInRack<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token function">serverTemplate</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">serverTemplate</span><span class="token punctuation">(</span>serverId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"server-rack"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> 
            <span class="token template-string"><span class="token string">`&lt;div id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">server-container" class="server-container"&gt;
              &lt;b class="server-name"&gt;SERVER </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/b&gt;
              &lt;br/&gt;
              &lt;div class="stat-outer-container"&gt;
                &lt;div class="stat-container"&gt;
                  &lt;div id= "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">memory" class="stat"&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;div id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">memory-stat"&gt;&lt;/div&gt;
              &lt;/div&gt;
              &lt;br/&gt;
              &lt;div class="stat-outer-container"&gt;
                &lt;div class="stat-container"&gt;
                  &lt;div id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">cpu" class="stat"&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;div id="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>serverId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">cpu-stat"&gt;&lt;/div&gt;
              &lt;/div&gt;
            &lt;/div&gt;`</span></span>
  <span class="token punctuation">}</span>

  <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style language-css">
  <span class="token selector">body </span><span class="token punctuation">{</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> arial<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#eeeeee</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token id">#server-rack</span> </span><span class="token punctuation">{</span>
    <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token number">1150</span>px<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token class">.server-name</span> </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token class">.server-container</span> </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid silver<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span>  lightgreen<span class="token punctuation">;</span> 
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token class">.stat-outer-container</span> </span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token class">.stat-container</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span> 
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span> 
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span> 
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative
  <span class="token punctuation">}</span>

  <span class="token selector"><span class="token class">.stat</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span> 
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> 
    <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span> 
    <span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span>
    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">.1</span>s"
  <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre>
<h4 id="run-the-code">Run the code</h4>
<p>Change directory to your <code>dev</code> folder on terminal and issue the following command</p>
<pre class=" language-bash"><code class="prism  language-bash">node sse.js
</code></pre>
<p>You should see the following text printed .</p>
<pre><code>Listening on port 3000!
</code></pre>
<p>You are all set now. Open <a href="http://localhost:3000/">http://localhost:3000/</a> in web browser to view the server rack simulation in operation.</p>
</div>

