<div class="stackedit__html"><h1 id="image-generator-for-social-media-posts">Image Generator for Social Media Posts</h1>
<blockquote>
<p>Image generator helps you create attractive images (like the one below) for social media sharing.</p>
<p><img src="https://surran.github.io/mark-downs/assets/image-generator3.png" alt="" title="Wikipedia map"></p>
<p>Try it hands on: <a href="https://www.terminalnotes.com/products/image-generator">https://www.terminalnotes.com/products/image-generator</a></p>
</blockquote>
<h3 id="why-is-this-needed">Why is this needed?</h3>
<p>A good image adds value to your brand and draws visitors to your website.</p>
<p>When running a social media campaign,  you would need not one but many such images. Won’t it be great if there is a way to generate a custom image with the right content, aspect ratio and resolution in less than 30 seconds ?</p>
<h3 id="product-requirements">Product Requirements?</h3>
<p>A social media card looks like the picture below. The image has a text, background and shows the website’s name. Let us reverse engineer these into requirements.</p>
<p><img src="https://surran.github.io/mark-downs/assets/image-generator1.png" alt="" title="Wikipedia map"></p>
<h4 id="image-resolution-considerations">Image Resolution considerations</h4>
<ol>
<li>Both facebook share and twitter card images have 1.91:1 aspect ratio. This means that any image that has a different aspect ratio shall be cropped from either the top or sides.</li>
<li>Both facebook and twitter recommend images with or above 1200px width for optimum viewing experience on desktop and mobile.</li>
<li>All social media websites scale down high resolution images to optimum viewing resolution for speed and space.</li>
</ol>
<p>Considering these, an output resolution of 1200 x 630px works fine for us.</p>
<h4 id="background-imagecolorpattern-considerations">Background image/color/pattern considerations</h4>
<ol>
<li>
<p>The image background could be a photograph. A user should be able to set any photograph as background by specifying its URL.</p>
</li>
<li>
<p>For plain backgrounds, a user should also be able to  choose and specify a solid color as background.</p>
</li>
</ol>
<h4 id="foreground-text-considerations">Foreground Text considerations</h4>
<ol>
<li>
<p>For main text, user should be able specify one, two or three word phrases with a total of upto 20 letters.</p>
</li>
<li>
<p>For subtext, the user should be able to specify any text upto 20 letters.</p>
</li>
</ol>
<h3 id="how-is-it-built">How is it built?</h3>
<p>The application uses HTML templates for layout. The actual image rendering is carried out by a NodeJS library called puppeteer that runs on headless chromium . The implementation is discussed in-depth in: <a href="https://terminalnotes.com/infrastructure/image-template">https://terminalnotes.com/infrastructure/image-template</a></p>
<p>The above backend mechanism is put on server and made available on an api endpoint. This api endpoint is plugged with a  HTML + Javascript front end which supplies the necessary user inputs like main text, background image, background color, logo text etc.</p>
<p>The application is designed to generate the image and open it in a new browser tab. If the image looks fine, the user can simply right click and save/download it.</p>
</div>

