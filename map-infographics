<div class="stackedit__html"><h1 id="display-interactive-info-graphics-on-a-geographical-map">Display interactive info-graphics on a geographical map</h1>
<h3 id="getting-started-with-an-svg-image-of-a-map">Getting started with an svg image of a map</h3>
<p>Let us start from a svg image file of a map. Download <a href="https://upload.wikimedia.org/wikipedia/commons/c/c4/English_official_in_India.svg">https://upload.wikimedia.org/wikipedia/commons/c/c4/English_official_in_India.svg</a> and rename the file as map.svg in your development folder.</p>
<p>Next create a simple index.html to display this file on local server.</p>
<pre><code>&lt;img src="map.svg" /&gt;
</code></pre>
<p>If you don’t have a local server already installed, you can try <a href="https://www.npmjs.com/package/http-server">https://www.npmjs.com/package/http-server</a></p>
<p>At this point your browser window should show the following graphic<br>
<img src="https://surran.github.io/mark-downs/assets/map-infographics3.png" alt="" title="Wikipedia map"></p>
<h2 id="adding-features">Adding Features</h2>
<p>Svg (Scalable Vector Graphics) images unlike other images formats are fully customizable through JavaScript. Let us see how:</p>
<h3 id="controlling-colors-of-regions">Controlling colors of Regions</h3>
<p>If you go through map.svg file you will see each state’s geometry is declared in a separate path tag. Each such path tag has an id which makes changing fill color of a region pretty simple. For example simply run the below code on browser console:</p>
<pre class=" language-js"><code class="prism  language-js">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"jharkhand_1_"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"fill"</span> <span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">)</span>
</code></pre>
<p>You will see that one of the regions on the map turns green.</p>
<p>Now instead of changing color of a single region, lets write a code that sets color of all regions. Copy and paste the below code in a separate .html file and host it on local server. You will see that this loads map.svg through JavaScript (instead of HTML); and on load sets color of all regions to purple.</p>
<pre class=" language-js"><code class="prism  language-js"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"container"</span> 
     style<span class="token operator">=</span><span class="token string">"width: 100%, height: 100%; overflow: hidden"</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
  <span class="token keyword">const</span> states <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"sikkim_1_"</span><span class="token punctuation">,</span><span class="token string">"bihar_1_"</span><span class="token punctuation">,</span><span class="token string">"jharkhand_1_"</span><span class="token punctuation">,</span><span class="token string">"rajasthan_1_"</span><span class="token punctuation">,</span><span class="token string">"west_bengal_1_"</span><span class="token punctuation">,</span><span class="token string">"madhya_pradesh_1_"</span><span class="token punctuation">,</span><span class="token string">"chhattisgarh_1_"</span><span class="token punctuation">,</span><span class="token string">"orissa_1_"</span><span class="token punctuation">,</span><span class="token string">"gujarat_1_"</span><span class="token punctuation">,</span><span class="token string">"maharashtra_1_"</span><span class="token punctuation">,</span><span class="token string">"Goa_1_"</span><span class="token punctuation">,</span><span class="token string">"Andhra_Pradesh_2_"</span><span class="token punctuation">,</span><span class="token string">"Karnataka_1_"</span><span class="token punctuation">,</span><span class="token string">"Kerala_1_"</span><span class="token punctuation">,</span><span class="token string">"Tamil_Nadu_1_"</span><span class="token punctuation">,</span><span class="token string">"uttar_pradesh_1_"</span><span class="token punctuation">,</span><span class="token string">"haryana_1_"</span><span class="token punctuation">,</span><span class="token string">"punjab_1_"</span><span class="token punctuation">,</span><span class="token string">"uttaranchal_1_"</span><span class="token punctuation">,</span><span class="token string">"himachal_pradesh_1_"</span><span class="token punctuation">,</span><span class="token string">"tripura_1_"</span><span class="token punctuation">,</span><span class="token string">"mizoram_1_"</span><span class="token punctuation">,</span><span class="token string">"manipur_1_"</span><span class="token punctuation">,</span><span class="token string">"nagaland_1_"</span><span class="token punctuation">,</span><span class="token string">"meghalaya_1_"</span><span class="token punctuation">,</span><span class="token string">"chandigarh_1_"</span><span class="token punctuation">,</span><span class="token string">"delhi_ncr_1_"</span><span class="token punctuation">,</span><span class="token string">"dadra_and_nagar_haveli_1_"</span><span class="token punctuation">,</span><span class="token string">"yanam_pondicherry_1_"</span><span class="token punctuation">,</span><span class="token string">"pudducherry_pondicherry_1_"</span><span class="token punctuation">,</span><span class="token string">"karikal_pondicherry_1_"</span><span class="token punctuation">,</span><span class="token string">"mahe_pondicherry_1_"</span><span class="token punctuation">,</span><span class="token string">"andaman_and_nicobar_1_"</span><span class="token punctuation">,</span><span class="token string">"jammu_and_kashmir_1_"</span><span class="token punctuation">,</span><span class="token string">"arunachal_pradesh_1_"</span><span class="token punctuation">,</span><span class="token string">"assam_1_"</span><span class="token punctuation">,</span><span class="token string">"siachen_1_"</span><span class="token punctuation">,</span> <span class="token string">"path3007"</span><span class="token punctuation">,</span> <span class="token string">"path3787"</span><span class="token punctuation">,</span> <span class="token string">"path3799"</span><span class="token punctuation">,</span> <span class="token string">"path3803"</span><span class="token punctuation">,</span> <span class="token string">"path3801"</span><span class="token punctuation">,</span> <span class="token string">"path3781"</span><span class="token punctuation">]</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"map.svg"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>svg <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> svg
      states<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"fill"</span><span class="token punctuation">,</span> <span class="token string">"purple"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre>
<h4 id="represent-data-by-color-intensity">Represent Data by Color Intensity</h4>
<p>Now you know how to control a region’s fill color. Next, lets try to use this to show a geographical data distribution.</p>
<p>For simplicity, we assume our data is composed of numbers between 0 and 1 for every region. (Infact any distribution can be converted to numbers between 0 and 1 using  v<sub>normalized</sub> = (v - v<sub>min</sub>)/(v<sub>max</sub> - v<sub>min</sub>)</p>
<p>On a map, these numbers can be represented on regions, using color intensity varying from no color to full color. Here is an example showing  population density distribution in India.</p>
<p><img src="https://surran.github.io/mark-downs/assets/map-infographics1.png" alt="" title="India Population density map"><br>
The example uses hsl (Hue, Saturation, and Lightness) color scheme to define fill color intensity based on normalized values. The below code snippet broadly captures the implementation</p>
<pre class=" language-js"><code class="prism  language-js">states<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> normalizedValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token template-string"><span class="token string">`hsl(0, 100%, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">100</span> <span class="token operator">-</span> <span class="token number">50</span><span class="token operator">*</span>normalizedValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%)`</span></span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"fill"</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<h4 id="represent-data-on-color-scale">Represent Data on Color Scale</h4>
<p>Similarly, you can represent data by varying hue instead of intensity</p>
<pre class=" language-js"><code class="prism  language-js">states<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>state <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> normalizedValue <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token template-string"><span class="token string">`hsl(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token number">115</span><span class="token operator">*</span><span class="token punctuation">(</span>normalizedValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 100%, 50%)`</span></span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"fill"</span><span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>Here values from 0 to 1 are represented on a red-&gt;yellow-&gt;green color scale.</p>
<p><img src="https://surran.github.io/mark-downs/assets/map-infographics2.png" alt="" title="India Random distribution map"></p>
<h3 id="zoom-in-zoom-out-functions">Zoom in, zoom out functions</h3>
<p>You can zoom in/out in the map by attaching function calls to svg elements, buttons or text anchors.  Copy and paste the below snippet in your code and call <code>zoomToGeometry("jharkhand_1_")</code> to zoom in.</p>
<pre class=" language-js"><code class="prism  language-js">zoomedInFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">zoomToGeometry</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>zoomedInFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">zoomOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
	zoomedInFlag <span class="token operator">=</span> <span class="token boolean">true</span>
	<span class="token keyword">const</span> boundingBox <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getBBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token number">1476</span><span class="token punctuation">,</span>
                       height<span class="token punctuation">:</span> <span class="token number">1680</span><span class="token punctuation">}</span>
	<span class="token keyword">const</span> scale <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>container<span class="token punctuation">.</span>width<span class="token operator">/</span>boundingBox<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
		              	   container<span class="token punctuation">.</span>height<span class="token operator">/</span>boundingBox<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
	<span class="token keyword">const</span> multiplier <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clientWidth<span class="token operator">/</span><span class="token number">1476</span>
	<span class="token keyword">const</span> delta <span class="token operator">=</span>  <span class="token punctuation">{</span>x<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token punctuation">(</span>boundingBox<span class="token punctuation">.</span>x <span class="token operator">-</span> container<span class="token punctuation">.</span>width<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> boundingBox<span class="token punctuation">.</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>multiplier<span class="token punctuation">,</span>
					y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token punctuation">(</span>boundingBox<span class="token punctuation">.</span>y <span class="token operator">-</span> container<span class="token punctuation">.</span>height<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> boundingBox<span class="token punctuation">.</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>multiplier<span class="token punctuation">}</span>
	document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"svg3642"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span>  <span class="token template-string"><span class="token string">`scale(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>scale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">) translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>delta<span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>delta<span class="token punctuation">.</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px) `</span></span>
<span class="token punctuation">}</span>	 

<span class="token keyword">function</span> <span class="token function">zoomOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	zoomedInFlag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"svg3642"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">"unset"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre>
<h2 id="infomaps-project">InfoMaps Project</h2>
<p>In this post we developed a framework to add data and interaction to a simple svg. Built on the same principles, here is a project showing the power of interaction infographics <a href="http://www.terminalnotes.com/project/infomaps">www.terminalnotes.com/project/infomaps</a></p>
</div>

