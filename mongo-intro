<div class="stackedit__html"><h1 id="setup-mongodb-atlas.-access-it-from-local-terminal">Setup MongoDB Atlas. Access it from local terminal</h1>
<blockquote>
<p>MongoDB is a popular NoSQL database that uses JSON like documents with schema. It offers advantages like easy scalability and faster access over traditional RDBMS (Relational Databases)</p>
<p>The Objective of this note is to setup a simple database in mongoDB Atlas (Free Tier) and write a simple script to populate it.</p>
</blockquote>
<p>Key steps:</p>
<ul>
<li>Sign up on MongoDB website and create a free Atlas cluster</li>
<li>Setup Database and Network Access.</li>
<li>Write code to access database and add sample data to it.</li>
</ul>
<h3 id="sign-up-on-mongodb">Sign up on MongoDB</h3>
<p>Sign up on MongoDB landing page <a href="https://www.mongodb.com/cloud/atlas">https://www.mongodb.com/cloud/atlas</a>. After registration you can create a Free Starter cluster.</p>
<p><img src="https://surran.github.io/mark-downs/assets/mongo-intro1.png" alt="" title="Create 
Free Cluster"></p>
<p>Choose aws as the cloud provider and select a server with a geographical location that is near your target audience.</p>
<p><img src="https://surran.github.io/mark-downs/assets/mongo-intro2.png" alt="" title="Create Free Cluster"></p>
<p>Click create cluster. Once the cluster is created the below screen would show up.</p>
<p><img src="https://surran.github.io/mark-downs/assets/mongo-intro3.png" alt="" title="Create Free Cluster"></p>
<h3 id="setup-database-and-network-access">Setup Database and Network Access</h3>
<p>Click on Database access in the left side-bar. Create a database user for accessing the database.<br>
Click on Network access in the left side-bar. Add your current IP to list of ips whitelisted for database access.<br>
Click on ‘CONNECT’ in Cluster 0 sandbox. The below panel would open.<br>
<img src="https://surran.github.io/mark-downs/assets/mongo-intro4.png" alt="" title="Create Free Cluster"><br>
Click on ‘Connect your application’. A panel opens up. Copy the connection string from it. The connection string should look similar to:</p>
<pre><code>mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0-v0a9a.mongodb.net
/test?retryWrites=true&amp;w=majority  
</code></pre>
<p>When using the connection string, make sure to replace <code>&lt;username&gt;</code> and <code>&lt;password&gt;</code> with the credentials of the database user you just created.</p>
<h3 id="access-and-write-to-database">Access and write to Database</h3>
<p>Create a dev folder on your local machine</p>
<pre><code>mkdir dev &amp;&amp; cd dev
</code></pre>
<p>Initialize npm and install mongoose. Mongoose is a node.js based package for MongoDB object modelling.</p>
<pre><code>npm init -y
npm i mongoose --save-dev
</code></pre>
<p>Now create a file createDB.js and copy paste the below code in it.</p>
<pre class=" language-js"><code class="prism  language-js"><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mongoose'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> connectionString <span class="token operator">=</span><span class="token string">"mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0-v0a9a.mongodb.net/test?retryWrites=true&amp;w=majority"</span><span class="token punctuation">;</span>

mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">,</span> <span class="token punctuation">{</span>useNewUrlParser<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> useUnifiedTopology<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Cat <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">'Cat'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> String <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> kitty <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'MyCat'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
kitty<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'meow'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>Make sure to replace  <code>connectionString</code> value in the above code with your connection string. Save the file and run the code on terminal.</p>
<pre class=" language-bash"><code class="prism  language-bash">node createDB.js
</code></pre>
<p>If the run is successful you should see the word meow getting printed. Now head to you mongoDB account on <a href="https://www.mongodb.com/cloud/atlas">https://www.mongodb.com/cloud/atlas</a>. click on ‘COLLECTIONS’ in Cluster 0 sandbox. You should see the entry name: “MyCat” in test.Cat collection.</p>
<p><img src="https://surran.github.io/mark-downs/assets/mongo-intro5.png" alt="" title="Create Free Cluster"></p>
<h2 id="conclusion">Conclusion</h2>
<p>We just accessed our MongoDB cluster from local terminal and created a “Cat” collection in “test” database. In our script we can change the database (that is written on) by simply replacing ‘test’ with the desired database name in <code>connectionString</code>.</p>
<p>Script based solutions are useful in repopulating or making mass modifications to a database. Next we shall explore doing similar things using Web APIs.</p>
</div>

